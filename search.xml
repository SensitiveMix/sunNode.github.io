<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[QQ表情插件]]></title>
      <url>http://sunnode.github.io/2016/09/22/QQ%E8%A1%A8%E6%83%85%E6%8F%92%E4%BB%B6/</url>
      <content type="html"><![CDATA[<p>##nodejs聊天室，浅析。</p>
<h2 id="经典qq表情插件"><a href="#经典qq表情插件" class="headerlink" title="经典qq表情插件"></a>经典qq表情插件</h2><blockquote>
<p>（html+nodejs应用）</p>
<h3 id="由于目前在接触聊天室项目，接到一个需求实现一个类似QQ表情。在网上找了一款jquery经典表情插件。下面介绍一个用法："><a href="#由于目前在接触聊天室项目，接到一个需求实现一个类似QQ表情。在网上找了一款jquery经典表情插件。下面介绍一个用法：" class="headerlink" title="由于目前在接触聊天室项目，接到一个需求实现一个类似QQ表情。在网上找了一款jquery经典表情插件。下面介绍一个用法："></a>由于目前在接触聊天室项目，接到一个需求实现一个类似QQ表情。在网上找了一款jquery经典表情插件。下面介绍一个用法：</h3><p>HTML：</p>
<ul>
<li>首先在html页面的head中引入jQuery库文件和QQ表情插件jquery.qqFace.js文件</li>
</ul>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"jquery-1.7.2.min.js"</span>&gt;&lt;/script&gt;</div><div class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"jquery.qqFace.js"</span>&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>然后在body中加入以下html代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;div id=<span class="string">"show"</span>&gt;&lt;/div&gt;</div><div class="line">    &lt;div class=<span class="string">"comment"</span>&gt;</div><div class="line">    &lt;div class=<span class="string">"com_form"</span>&gt;</div><div class="line">        &lt;textarea class=<span class="string">"input"</span> id=<span class="string">"saytext"</span> name=<span class="string">"saytext"</span>&gt;&lt;/textarea&gt;</div><div class="line">        &lt;p&gt;&lt;span class=<span class="string">"emotion"</span>&gt;表情&lt;/span&gt;&lt;input <span class="built_in">type</span>=<span class="string">"button"</span> class=<span class="string">"sub_btn"</span> value=<span class="string">"提交"</span>&gt;&lt;/p&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">  &lt;/div&gt;</div></pre></td></tr></table></figure></p>
<blockquote>
<p>CSS：<br>我们用CSS来美化页面，关键是表情按钮图片span.emotion的鼠标滑上与移开效果，以及调用表情插件后，显示的表情.qqFace面板效果，请看代码:</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">.comment&#123;width:680px; margin:20px auto; position:relative&#125;</div><div class="line">.comment h3&#123;height:28px; line-height:28px&#125;</div><div class="line">.com_form&#123;width:100%; position:relative&#125;</div><div class="line">.input&#123;width:99%; height:60px; border:1px solid <span class="comment">#ccc&#125;</span></div><div class="line">.com_form p&#123;height:28px; line-height:28px; position:relative&#125;</div><div class="line">span.emotion&#123;width:42px; height:20px; background:url(icon.gif) no-repeat 2px 2px;</div><div class="line">padding-left:20px; cursor:pointer&#125;</div><div class="line">span.emotion:hover&#123;background-position:2px -28px&#125;</div><div class="line">.qqFace&#123;margin-top:4px;background:<span class="comment">#fff;padding:2px;border:1px #dfe6f6 solid;&#125;</span></div><div class="line">.qqFace table td&#123;padding:0px;&#125;</div><div class="line">.qqFace table td img&#123;cursor:pointer;border:1px <span class="comment">#fff solid;&#125;</span></div><div class="line">.qqFace table td img:hover&#123;border:1px <span class="comment">#0066cc solid;&#125;</span></div><div class="line"><span class="comment">#show&#123;width:680px; margin:20px auto&#125;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>jquery:<br>当我们点击页面输入框下方那个笑脸时，触发调用qqface表情插件，简单几行就搞定。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$(<span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">    $(<span class="string">'.emotion'</span>).qqFace(&#123;</div><div class="line"></div><div class="line">        assign:<span class="string">'saytext'</span>, //给输入框赋值</div><div class="line">        path:<span class="string">'face/'</span>    //表情图片存放的路径</div><div class="line">    &#125;);</div><div class="line">    ...</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>当选择表情图片后，输入框中会插入一段如[em_5]之类的代码，代表插入的表情图片，实际应用中，点提交按钮后应该将这段表情代码连同其他内容插入到数据表中。而在页面显示的时候，我们应该将表情代码替换成真正的图片显示在页面上。下面的代码是插入表情图片后，点击提交按钮，使用javascript自定义函数将表情代码替换并显示：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$(<span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">    ...</div><div class="line">    $(<span class="string">".sub_btn"</span>).click(<span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">        var str = $(<span class="string">"#saytext"</span>).val();</div><div class="line">        $(<span class="string">"#show"</span>).html(replace_em(str));</div><div class="line">    &#125;);</div><div class="line">&#125;);</div><div class="line"><span class="keyword">function</span> replace_em(str)&#123;</div><div class="line">    str = str.replace(/\&lt;/g,<span class="string">'&lt;；'</span>);</div><div class="line">    str = str.replace(/\&gt;/g,<span class="string">'&gt;；'</span>);</div><div class="line">    str = str.replace(/\n/g,<span class="string">'&lt;；br/&gt;；'</span>);</div><div class="line">    str = str.replace(/\[em_([0-9]*)\]/g,<span class="string">'&lt;img src="face/$1.gif" border="0" /&gt;'</span>);</div><div class="line">    <span class="built_in">return</span> str;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>下面着重介绍下在nodejs+express4中的应用：</p>
<p>步骤如下：</p>
<ul>
<li><p>加入引用表情的span</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;div class=<span class="string">"send-out"</span>&gt;</div><div class="line">            &lt;span class=<span class="string">"emotion"</span> id=<span class="string">"emotion"</span>&gt;&lt;img class=<span class="string">"head_picture"</span> src=<span class="string">"/images/r-middle-pic07.png"</span>&gt;表情&lt;/span&gt;</div><div class="line">            &lt;input class=<span class="string">"send-text"</span> id=<span class="string">"Y_iSend_Input"</span> <span class="built_in">type</span>=<span class="string">"text"</span> maxlength=<span class="string">"100"</span> value=<span class="string">""</span>&gt;</div><div class="line">            &lt;input id=<span class="string">"Y_iSend_Bt"</span> class=<span class="string">"out_text"</span> onclick=<span class="string">"CHAT.submit();"</span> <span class="built_in">type</span>=<span class="string">"button"</span>  value=<span class="string">"发送"</span>/&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>加入头文件并调用jquery</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"/js/jquery.qqFace.js"</span>&gt;&lt;/script&gt;</div><div class="line"> $(<span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">            $(<span class="string">'.emotion'</span>).qqFace(&#123;</div><div class="line">                assign:<span class="string">'Y_iSend_Input'</span>, //给输入框赋值</div><div class="line">                path:<span class="string">'/face/'</span>    //表情图片存放的路径</div><div class="line">           &#125;);</div><div class="line">    &#125;);</div></pre></td></tr></table></figure>
</li>
<li><p>用正则替换输入的[]表情</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">w.CHAT=&#123;</div><div class="line">replace_em: <span class="keyword">function</span> (str) &#123;</div><div class="line">            str = str.replace(/\&lt;/g, <span class="string">'&lt;;'</span>);</div><div class="line">            str = str.replace(/\&gt;/g, <span class="string">'&gt;;'</span>);</div><div class="line">            str = str.replace(/\n/g, <span class="string">'&lt;;br/&gt;;'</span>);</div><div class="line">            str = str.replace(/\[em_([0-9]*)\]/g, <span class="string">'&lt;img src="/face/$1.gif" border="0" /&gt;'</span>);</div><div class="line">            <span class="built_in">return</span> str;</div><div class="line">        &#125;,</div><div class="line"></div><div class="line">        //提交聊天消息内容</div><div class="line">        submit: <span class="function"><span class="title">function</span></span> () &#123;</div><div class="line"></div><div class="line">            var str = $(<span class="string">"#Y_iSend_Input"</span>).val();</div><div class="line"></div><div class="line">            $(<span class="string">"#Y_iSend_Input"</span>).val(CHAT.replace_em(str));</div><div class="line"></div><div class="line">            var message_text = d.getElementById(<span class="string">"Y_iSend_Input"</span>).value;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Socket FrameWork]]></title>
      <url>http://sunnode.github.io/2016/09/19/socket-framework/</url>
      <content type="html"><![CDATA[<h1 id="Socket-io-WebSocket-UwebSockets"><a href="#Socket-io-WebSocket-UwebSockets" class="headerlink" title="Socket.io,WebSocket,UwebSockets"></a>Socket.io,WebSocket,UwebSockets</h1><h2 id="三种socket框架简介"><a href="#三种socket框架简介" class="headerlink" title="三种socket框架简介"></a>三种socket框架简介</h2><blockquote>
<h2 id="UwebSockets-简介"><a href="#UwebSockets-简介" class="headerlink" title="UwebSockets 简介"></a>UwebSockets 简介</h2></blockquote>
<p>  µWebSockets简称µWS，是一个超轻量级的、高效的、可扩展的WebSocket服务器实现，基于Node.js开发，主要特征是易于使用、完全异步的面向对象的接口，并且可以扩展到数百万的连接，与同类的产品相比，其内存占用只有竞品的几分之一，采用zlib/libpng许可证（非常宽松的许可证，适合商业应用）。</p>
<h3 id="主要特性"><a href="#主要特性" class="headerlink" title="主要特性"></a>主要特性</h3><pre><code>+ 支持Linux、OSX、Windows
+ 内建了负载平衡和支持多核
+ 支持SSL/TLS安全访问，且可以与外部HTTPS服务器相集成
+ 内建Permessage-deflate（读取压缩消息）
+ Node.js绑定对外暴露WS接口
+ 可选择作为如Socket.IO、Primus或SocketCluster库的ws引擎
</code></pre><blockquote>
<h2 id="websocket-简介"><a href="#websocket-简介" class="headerlink" title="websocket 简介"></a>websocket 简介</h2></blockquote>
<p>WebSocket是html5规范新引入的功能，用于解决浏览器与后台服务器双向通讯的问题，使用WebSocket技术，后台可以随时向前端推送消息。</p>
<h3 id="主要特性-1"><a href="#主要特性-1" class="headerlink" title="主要特性"></a>主要特性</h3><pre><code>+ 简单轮询
+ 长轮询
</code></pre><blockquote>
<h2 id="socket-io-简介"><a href="#socket-io-简介" class="headerlink" title="socket.io 简介"></a>socket.io 简介</h2></blockquote>
<p>Socket.io是一个完全由JavaScript实现，基于Node.js、支持WebSocket的协议用于实时通信、跨平台的开源框架，它包括了客户端的JavaScript和服务器端的Node.js.</p>
<h3 id="主要特性-2"><a href="#主要特性-2" class="headerlink" title="主要特性"></a>主要特性</h3><pre><code>+ 实时通信
+ 基于事件
+ 基于Node.js
+ 开源框架
+ 针对于webSockets的扩展
+ 二进制流
+ 没有互联网的依赖
</code></pre><blockquote>
<h2 id="Socket-io-VS-uWebSocket"><a href="#Socket-io-VS-uWebSocket" class="headerlink" title="Socket.io VS uWebSocket"></a>Socket.io VS uWebSocket</h2></blockquote>
<p>uWebSocket较Socket.io来说生态圈还不是很完善,不是稳定版本。相对较优的方面在于它的轻量级,高度可扩展型框架。<br><img src="../../../images/compare-1.png" alt="比较示意图"><br>下图显示过去一段时间这两种框架热度:<br><img src="../../../images/compare-2.png" alt="比较示意图"></p>
<blockquote>
<h2 id="socket-io-VS-websocket-对比"><a href="#socket-io-VS-websocket-对比" class="headerlink" title="socket.io VS websocket 对比"></a>socket.io VS websocket 对比</h2></blockquote>
<p>WebSocket是HTML5的一种新通信协议，它实现了浏览器与服务器之间的双向通讯。而Socket.IO是一个完全由JavaScript实现、基于Node.js、支持WebSocket的协议用于实时通信、跨平台的开源框架，它包括了客户端的JavaScript和服务器端的Node.js。Socket.IO除了支持WebSocket通讯协议外，还支持许多种轮询（Polling）机制以及其它实时通信方式，并封装成了通用的接口，并且在服务端实现了这些实时机制的相应代码。Socket.IO实现的Polling通信机制包括Adobe Flash Socket、AJAX长轮询、AJAX multipart streaming、持久Iframe、JSONP轮询等。Socket.IO能够根据浏览器对通讯机制的支持情况自动地选择最佳的方式来实现网络实时应用。当前，Socket.IO最新版本是于2015年1月19日发布的1.3.0版本，该版本增强了稳定性和提高了性能，并修复了大量Bug。</p>
<p>Socket.IO已经具有众多强大功能的模块和扩展API，如（session.socket.io)（http session中间件，进行session相关操作）、socket.io-cookie（cookie解析中间件）、session-web-sockets（以安全的方式传递Session）、socket-logger（JSON格式的记录日志工具）、websocket.MQ（可靠的消息队列）、socket.io-mongo（使用MongoDB的适配器）、socket.io-redis（Redis的适配器）、socket.io-parser（服务端和客户端通讯的默认协议实现模块）等。</p>
<blockquote>
<h2 id="综述"><a href="#综述" class="headerlink" title="综述"></a>综述</h2></blockquote>
<p>在开发IO密集型应用的时候,完全可以以Socket.io为主体,将Socket.io的默认engine.io更换为uws,因为uws本身类库就支持socket.io扩展。</p>
<h3 id="Use-the-new-wsEngine-‘uws’-option-like-so"><a href="#Use-the-new-wsEngine-‘uws’-option-like-so" class="headerlink" title="Use the new wsEngine: ‘uws’ option like so:"></a>Use the new wsEngine: ‘uws’ option like so:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var io = require(<span class="string">'socket.io'</span>)(80, &#123; wsEngine: <span class="string">'uws'</span> &#125;);</div></pre></td></tr></table></figure>
<blockquote>
<h2 id="references"><a href="#references" class="headerlink" title="references"></a>references</h2><ul>
<li><a href="https://github.com/uWebSockets" title="uWebSockets" target="_blank" rel="external">uWebSockets</a></li>
<li><a href="https://github.com/socketCluster" title="socketCluster" target="_blank" rel="external">socketCluster</a></li>
<li><a href="https://github.com/socketio/socket.io" title="socket.io" target="_blank" rel="external">socket.io</a></li>
<li><a href="https://github.com/gorilla/websocket" title="websocket" target="_blank" rel="external">websocket</a></li>
<li><a href="https://github.com/M6Web/websocket-bench" title="websocket-bench" target="_blank" rel="external">websocket-bench</a></li>
</ul>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://sunnode.github.io/2016/09/17/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
